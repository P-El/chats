{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Prashant\\\\project\\\\chats\\\\src\\\\signup\\\\signup.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.userTyping = (type, e) => {\n      switch (type) {\n        case 'email':\n          this.setState({\n            email: e.target.value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: e.target.value\n          });\n          break;\n\n        case 'passwordConfirmation':\n          this.setState({\n            passwordConfirmation: e.target.value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.formidIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    this.submitSignup = e => {\n      e.preventDefault();\n\n      if (!this.formidIsValid()) {\n        this.setState({\n          signupError: 'Password do not match'\n        });\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(authRes => {\n        const userObj = {\n          email: authRes.user.email\n        };\n        firebase.firebase().doc(this.state.email).set(userObj);\n        collection('user');\n        then(() => {\n          this.props.history.push('/dashboard');\n        });\n      }, authErr => {\n        console.log(authErr);\n        this.setState({\n          signupError: \"Failed to add user\"\n        });\n      });\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: ''\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.submitSignup(e),\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"signup-email-input\",\n              children: \"Enter Your Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              autoComplete: \"email\",\n              onChange: e => this.userTyping('email', e),\n              autoFocus: true,\n              id: \"signup-email-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"signup-password-input\",\n              children: \"Create A Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              onChange: e => this.userTyping('password', e),\n              id: \"signup-password-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"signup-password-confirmation-input\",\n              children: \"Confirm Your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              onChange: e => this.userTyping('passwordConfirmation', e),\n              id: \"signup-password-confirmation-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), this.state.signupError ? /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.errorText,\n          component: \"h5\",\n          variant: \"h6\",\n          children: this.state.signupError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(Typography, {\n          compenent: \"h5\",\n          variant: \"h6\",\n          className: classes.hasAccountHeader,\n          children: \"Already Have An Account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.logInLink,\n          to: \"/login\",\n          children: \"Log In!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(SignupComponent);","map":{"version":3,"sources":["C:/Users/Prashant/project/chats/src/signup/signup.js"],"names":["React","Link","FormControl","InputLabel","Input","Paper","withStyles","CssBaseline","Typography","Button","styles","SignupComponent","Component","constructor","userTyping","type","e","setState","email","target","value","password","passwordConfirmation","formidIsValid","state","submitSignup","preventDefault","signupError","firebase","auth","createUserWithEmailAndPassword","then","authRes","userObj","user","doc","set","collection","props","history","push","authErr","console","log","render","classes","main","paper","form","submit","errorText","hasAccountHeader","logInLink"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './styles';\r\n \r\n \r\n \r\n \r\n\r\nclass SignupComponent extends React.Component{\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: ''\r\n    };\r\n  }\r\n\r\n     render(){\r\n        const {classes} = this.props;\r\n          return(\r\n        <main className = {classes.main}>\r\n            <CssBaseline />\r\n            <Paper className ={classes.paper}>\r\n              <Typography component='h1' variant=\"h5\">\r\n                Sign Up\r\n              </Typography>\r\n              <form onSubmit={ (e) => this.submitSignup(e)} className = {classes.form}>\r\n                 <FormControl required fullWidth margin='normal'>\r\n                 <InputLabel htmlFor='signup-email-input'>Enter Your Email</InputLabel>\r\n                 <Input  autoComplete='email' onChange={(e) => this.userTyping('email' ,e)} autoFocus id ='signup-email-input'></Input>\r\n                 </FormControl>\r\n                 <FormControl required fullWidth margin='normal'>\r\n                   <InputLabel htmlFor='signup-password-input'>Create A Password</InputLabel>\r\n                   <Input type='password'  onChange={(e) => this.userTyping('password' ,e)} id ='signup-password-input'></Input>\r\n                 </FormControl>\r\n                 <FormControl required fullWidth margin='normal'>\r\n                   <InputLabel htmlFor='signup-password-confirmation-input'>Confirm Your Password</InputLabel>\r\n                   <Input type='password'  onChange={(e) => this.userTyping('passwordConfirmation' ,e)} id ='signup-password-confirmation-input'></Input>\r\n                 </FormControl>\r\n                 <Button type='submit' fullWidth variant = 'contained' color='primary' className ={classes.submit}>Submit</Button>\r\n                 </form>\r\n                 { \r\n                this.state.signupError ? \r\n                <Typography className={classes.errorText} component='h5' variant='h6'>\r\n                 {this.state.signupError}\r\n                  </Typography> :\r\n                    null\r\n          }\r\n                 <Typography compenent='h5' variant='h6' className={classes.hasAccountHeader}>Already Have An Account?</Typography>\r\n                 <Link className={classes.logInLink} to=\"/login\">Log In!</Link>\r\n            </Paper>\r\n        </main>\r\n          );\r\n     }\r\n     \r\n     \r\n\r\n     userTyping = (type, e) =>{\r\n        switch (type) {\r\n          case 'email':\r\n            this.setState({email: e.target.value});\r\n            break;\r\n        \r\n         case 'password':\r\n           this.setState({password: e.target.value});\r\n             break;\r\n          case 'passwordConfirmation':\r\n            this.setState({passwordConfirmation: e.target.value});\r\n            break;\r\n        \r\n          \r\n          default:\r\n            break;\r\n        }\r\n     }\r\n     formidIsValid = () =>this.state.password===this.state.passwordConfirmation;\r\n     submitSignup = (e) =>{\r\n       e.preventDefault();\r\n       if(!this.formidIsValid()){\r\n         this.setState({signupError:'Password do not match'});\r\n         return;\r\n       }\r\n       firebase\r\n       .auth()\r\n       .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n       .then(authRes => {\r\n         const userObj = {\r\n         email: authRes.user.email\r\n         };\r\n         firebase\r\n         .firebase()\r\n         .doc(this.state.email)\r\n         .set(userObj)\r\n          collection('user')\r\n          then(() => {\r\n            this.props.history.push('/dashboard')\r\n          })\r\n        },authErr =>{\r\n          console.log(authErr);\r\n          this.setState({signupError : \"Failed to add user\"});\r\n        })\r\n     }\r\n}\r\nexport default withStyles(styles)(SignupComponent);"]},"metadata":{},"sourceType":"module"}